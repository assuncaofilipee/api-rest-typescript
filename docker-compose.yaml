version: '3.8'

services:
  api-rest-typescript:
    container_name: api-rest-typescript
    image: node:18.12.1-alpine
    restart: always
    volumes:
      - .:/app
    working_dir: /app
    command: sh -c 'yarn install && yarn build && yarn migration:run && yarn dev'
    ports:
      - ${APP_PORT}:${APP_PORT}
    environment:
      APP_ENVIRONMENT: ${APP_ENVIRONMENT}
      APP_NAME: ${APP_NAME}
      APP_PORT: ${APP_PORT}
      DB_POSTGRES_HOST: ${DB_POSTGRES_HOST}
      DB_POSTGRES_PORT: ${DB_POSTGRES_PORT}
      DB_POSTGRES_USER: ${DB_POSTGRES_USER}
      DB_POSTGRES_PASSWORD: ${DB_POSTGRES_PASSWORD}
      DB_POSTGRES_NAME: ${DB_POSTGRES_NAME}
    depends_on:
      - postgres
      - cache
    links:
      - postgres
      - cache
    networks:
      - sharedNetwork 

  postgres:
    container_name: local-db-api-rest-typescript
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_POSTGRES_NAME}
    ports:
      - ${DB_POSTGRES_PORT}:${DB_POSTGRES_PORT}
    networks:
      - sharedNetwork 

  cache:
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    volumes: 
      - cache:/data
    networks:
      - sharedNetwork
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - sharedNetwork

volumes:
  cache:
    driver: local 

networks:
  sharedNetwork:
    name: shared-network

